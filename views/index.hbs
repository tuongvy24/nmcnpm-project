 {{> sidebar }}

<div class="col-lg-8 col-md-7">
  <div class="row">    
    <div class="col-lg-12" >
      <h2 class="mb-4">Data Crawler</h2>
      {{!-- FORM HERE --}}
      <form id="crawlerForm" method="post" action="/home">
        <div class="form-group">
          <label for="websiteSelect">Chọn trang web cần crawler:</label> <br>
          <select class="form-control" id="websiteSelect" name="selectedWebsite">
            {{#each weblists}}
            <option value="{{id}}">{{web_name}}</option>
            {{/each}}
            <!-- Add more options as needed -->
          </select> <br>
        </div> <br>
        
        <button type="submit" class="btn btn-primary">Submit</button><br>
        {{#if successMessage}}
        <div class="alert-primary">{{successMessage}}</div>
        {{else}}
        <div class="alert-danger">{{error}}</div>
        {{/if}}

        <h3 class="mt-3">Cron Job Results</h3>
        <div>
         
          {{!-- <p class="text-primary">{{crawlResults.crawler1}}</p>
          <h4>Crawler 2:</h4>
          <p class="text-primary">{{crawlResults.crawler2}}</p>
          <h4>Crawler 3:</h4>
          <p class="text-primary">{{crawlResults.crawler3}}</p> --}}

          <h4>Crawler 1:</h4>
          <p id="crawler1" class="text-primary"></p>
          <h4>Crawler 2:</h4>
          <p id="crawler2" class="text-primary"></p>
          <h4>Crawler 3:</h4>
          <p id="crawler3" class="text-primary"></p>

        </div>

        <div class="p-3 mt-3">
          <ul id="messages"></ul>
          <ul id="crawlResultsUpdated"></ul>
          <input id="message" autocomplete="off" />
          <button id="send">Send</button>
        </div>
      </form>
    </div>

  </div>
</div>


 <script src="/socket.io/socket.io.js"></script>
  <script>
    document.addEventListener('DOMContentLoaded', (event) => {
      const socket = io(); // tao ra ket noi websoket -> server

      // Gửi tin nhắn khi nhấn nút gửi
      document.getElementById('send').onclick = () => {
        const message = document.getElementById('message').value;
        socket.emit('message', message); //gui tin den server
        document.getElementById('message').value = '';
      };

      // Lắng nghe tin nhắn từ server
      socket.on('message', (message) => {
        const messages = document.getElementById('messages');
        const li = document.createElement('li');
        li.appendChild(document.createTextNode(message));
        messages.appendChild(li);
      });

      socket.on('crawlResultsUpdated', (crawlResultsUpdated) => {
        console.log('Received crawlResultsUpdated:', crawlResultsUpdated);      
        // Update the view with the received data
        document.getElementById('crawler1').innerText = crawlResultsUpdated.crawler1;
        document.getElementById('crawler2').innerText = crawlResultsUpdated.crawler2;
        document.getElementById('crawler3').innerText = crawlResultsUpdated.crawler3;
        
      });

      socket.on('disconnect', () => {
                console.log('Disconnected from server');
      });
    });
  </script>
  
